from distutils.command.config import config
import json
import logging
import os
from config import token
from aiogram.utils.markdown import hbold, hlink
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
import asyncio
from cs_skins_get import collect_data

bot = Bot(token=token, parse_mode=types.ParseMode.HTML)
db = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)


@db.message_handler(commands='start')
async def start(message: types.Message):
    start_buttons = ['üí≤–í–∞–ª—é—Ç–∞', 'üì∞–ù–æ–≤–æ—Å—Ç–∏',
                     'üéÆ–¢–æ–ø –∏–≥—Ä', 'üî•–°–∫–∏–Ω—ã CsGo —Å–æ —Å–∫–∏–¥–∫–æ–π']
    keayboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keayboard.add(*start_buttons)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=keayboard)


@db.message_handler(Text(equals='üí≤–í–∞–ª—é—Ç–∞'))
async def get_discount_many(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏ ...')
    with open('../result_mant_price.json', encoding='utf-8') as file:
        data = json.load(file)
    for index, item in enumerate(data[:5]):
        card = f"{hlink(item.get('CcyNm_RU'),item.get('Date'))}\n"\
            f"{hbold('–ö—É—Ä—Å: ')}{item.get('Rate')}%\n" \
            f"{hbold('–ù–∞–º–∏–Ω–∞–ª: ')}${item.get('Nominal')}üî•"
        if index % 20 == 0:
            await asyncio.sleep(3)
        await message.answer(card)


@db.message_handler(Text(equals='üéÆ–¢–æ–ø –∏–≥—Ä'))
async def get_discount_many(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏ ...')
    with open('../result.json', encoding='utf-8') as file:
        data = json.load(file)
    for index, item in enumerate(data):
        card = f"{hlink(item.get('article_title'),item.get('article_urls'))}\nüî•"
        if index % 20 == 0:
            await asyncio.sleep(3)
        await message.answer(card)


@db.message_handler(Text(equals='üì∞–ù–æ–≤–æ—Å—Ç–∏'))
async def get_discount_many(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏ ...')
    with open('../result_information.json', encoding='utf-8') as file:
        data = json.load(file)
    for index, item in enumerate(data[:15]):
        card = f"{hlink(item.get('article_title'),item.get('article_urls'))}\n"\
            f"{hbold('–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ')}{item.get('article_text')}%\n"\
            f"{hbold('–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ ')}{item.get('article_data')}%üî•\n"
        if index % 20 == 0:
            await asyncio.sleep(6)
        await message.answer(card)


@db.message_handler(Text(equals='üî•–°–∫–∏–Ω—ã CsGo —Å–æ —Å–∫–∏–¥–∫–æ–π'))
async def start(message: types.Message):
    start_buttons = ['üî™–ù–æ–∂–∏', 'üß§–ü–µ—Ä—á–∞—Ç–∫–∏', 'üî´–°–Ω–∞–π–ø–µ—Ä—Å–∫–∏–µ –≤–∏–Ω—Ç–æ–≤–∫–∏']
    keayboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keayboard.add(*start_buttons)
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–∫–≥–æ—Ä–∏—é', reply_markup=keayboard)


@db.message_handler(Text(equals='üî™–ù–æ–∂–∏'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏ ...')
    collect_data()
    with open('../result_cs.json', encoding='utf-8') as file:
        data = json.load(file)
    for index, item in enumerate(data):
        card = f"{hlink(item.get('full_name'),item.get('3d'))}\n"\
            f"{hbold('–°–∫–∏–¥–∫–∞: ')}{item.get('overprice')}%\n" \
            f"{hbold('–°—Ç–æ–∏–º–æ—Å—Ç—å: ')}${item.get('price')}üî•"
        if index % 20 == 0:
            await asyncio.sleep(5)
        await message.answer(card)


@db.message_handler(Text(equals='üî´–°–Ω–∞–π–ø–µ—Ä—Å–∫–∏–µ –≤–∏–Ω—Ç–æ–≤–∫–∏'))
async def get_discount_guns(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏ ...')
    collect_data(cat_type=4)
    with open('../result_cs.json', encoding='utf-8') as file:
        data = json.load(file)
    for index, item in enumerate(data):
        card = f"{hlink(item.get('full_name'),item.get('3d'))}\n"\
            f"{hbold('–°–∫–∏–¥–∫–∞: ')}{item.get('overprice')}%\n" \
            f"{hbold('–°—Ç–æ–∏–º–æ—Å—Ç—å: ')}${item.get('price')}üî•"
        if index % 20 == 0:
            await asyncio.sleep(5)
        await message.answer(card)


@db.message_handler(Text(equals='üß§–ü–µ—Ä—á–∞—Ç–∫–∏'))
async def get_discount_perch(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏ ...')
    collect_data(3)
    with open('../result_cs.json', encoding='utf-8') as file:
        data = json.load(file)
    for index, item in enumerate(data):
        card = f"{hlink(item.get('full_name'),item.get('3d'))}\n"\
            f"{hbold('–°–∫–∏–¥–∫–∞: ')}{item.get('overprice')}%\n" \
            f"{hbold('–°—Ç–æ–∏–º–æ—Å—Ç—å: ')}${item.get('price')}üî•"
        if index % 20 == 0:
            await asyncio.sleep(5)
        await message.answer(card)


def main():
    executor.start_polling(db)


if __name__ == '__main__':
    main()
